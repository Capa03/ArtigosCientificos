@page "/Home"
@using ArtigosCientificosMvc.Models.Article
@using ArtigosCientificosMvc.Models.User
@using ArtigosCientificosMvc.Service.Home
@inject IHomeService homeService
@inject NavigationManager NavigationManager
@rendermode InteractiveServer

<PageTitle>Home</PageTitle>

<h1 class="text-center text-2xl font-semibold my-4">Published Articles</h1>
<style>
    .container {
    max-width: 1200px; /* Limits content width for better layout */
    }

    /* Add a hover effect */
    .hover\:bg-gray-100:hover {
    background-color: #f7fafc; /* Light gray background on hover */
    }

    /* Improve spacing */
    .px-4 {
    padding-left: 1rem;
    padding-right: 1rem;
    }

    .mt-6 {
    margin-top: 1.5rem;
    }

    .space-y-6 > * + * {
    margin-top: 1.5rem;
    }

    .card {
    border: 1px solid #ddd !important;
    border-radius: 8px !important;
    padding: 16px !important;
    margin-bottom: 20px !important;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1) !important;
    max-width: 20000px !important;
    }

    .card h3 {
    margin: 0 0 10px !important;
    font-size: 18px !important;
    }

    .card p {
    margin: 5px 0 !important;
    color: #555 !important;
    font-size: 14px !important;
    }

    .card a {
    color: #007BFF !important;
    text-decoration: none !important;
    }

    .card a:hover {
    text-decoration: underline !important;
    }

    .card .meta {
    margin-top: 10px !important;
    font-size: 12px !important;
    color: #777 !important;
    }
</style>
@if (isLoading)
{
    <div class="flex justify-center items-center">
        <div class="spinner-border text-blue-500" role="status">
            <span class="sr-only">Loading...</span>
        </div>
    </div>
}
else if (articles == null || articles.Count == 0)
{
    <div class="text-center">
        <p class="text-gray-500">No articles available.</p>
    </div>
}
else
{
    @foreach (var article in articles)
    {

        <div class="card">
            <h3><a href="" @onclick="() => NavigateToDetails(article.Id)">@article.Title</a></h3>
            <p><strong>Published by:</strong> @GetAuthorUsername(article.UserId) </p>
            <p><strong>Abstract:</strong> @((article.Abstract.Length > 300) ? article.Abstract.Substring(0, 300) + "..." : article.Abstract)</p>
            <p><strong>Keywords:</strong> @article.Keywords</p>
        </div>
    }
}

@code{

    private void NavigateToDetails(int id)
    {
        NavigationManager.NavigateTo($"/Article/{id}");
    }

    private string GetAuthorUsername(int authorid){
        return users[authorid - 1].Username;
    }

    private string user;
    private List<Article> articles;
    private List<User> users;
    private bool isLoading = true;
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {

        if (firstRender)
        {
            articles = await homeService.getArticles();
            users = await homeService.getUsers();
            isLoading = false;
            StateHasChanged();
        }

    }
}

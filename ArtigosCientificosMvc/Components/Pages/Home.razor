@page "/Home"
@using ArtigosCientificosMvc.Models.Article
@using ArtigosCientificosMvc.Models.User
@using ArtigosCientificosMvc.Service.Home
@inject IHomeService homeService
@inject NavigationManager NavigationManager
@rendermode InteractiveServer

<PageTitle>Home</PageTitle>

<h1 class="text-center text-2xl font-semibold my-4">Published Articles</h1>

@if (isLoading)
{
    <div class="flex justify-center items-center">
        <div class="spinner-border text-blue-500" role="status">
            <span class="sr-only">Loading...</span>
        </div>
    </div>
}
else if (articles == null || articles.Count == 0)
{
    <div class="text-center">
        <p class="text-gray-500">No articles available.</p>
    </div>
}
else
{
    <div class="container mx-auto px-4 mt-6 space-y-6">
    @foreach (var article in articles)
    {
            <a @onclick="() => NavigateToDetails(article.Id)" class="block">
            <div class="w-full bg-white rounded-lg shadow-lg overflow-hidden hover:shadow-xl transition-shadow duration-300 hover:bg-gray-100">
                <div class="p-6">
                    <!-- Article Title -->
                    <h2 class="text-2xl font-bold text-blue-600 truncate mb-4">@article.Title</h2>
                    
                    <!-- Article Abstract -->
                    <p class="text-gray-700 text-base leading-relaxed mb-4">
                        @((article.Abstract.Length > 300) ? article.Abstract.Substring(0, 300) + "..." : article.Abstract)
                    </p>
                    
                    <!-- Article Metadata -->
                    <div class="text-sm text-gray-500">
                        <p><strong>Keywords:</strong> @article.Keywords</p>
                    </div>
                </div>
            </div>
        </a>
    }
    </div>


}

@code{

    private void NavigateToDetails(int id)
    {
        NavigationManager.NavigateTo($"/Article/{id}");
    }

    private List<Article> articles;
    private bool isLoading = true;
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {

        if (firstRender)
        {
            articles = await homeService.getArticles();
            isLoading = false;
            StateHasChanged();
        }

    }
}

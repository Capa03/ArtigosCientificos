@page "/login"
@using ArtigosCientificosMvc.Service.Login
@using ArtigosCientificosMvc.Service.Token
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@rendermode InteractiveServer
@inject ILoginService loginService
@inject NavigationManager Navigation
@inject TokenManager TokenManager


<PageTitle>Login</PageTitle>

<div>
    <div>
        <h2>Login</h2>

        <EditForm Model="@userDTO" OnSubmit="@OnLogin" FormName="Login">
            <DataAnnotationsValidator />
            
            <div class="form-group m-3">
                <label for="username">Username: </label>
                <InputText id="username" @bind-Value="@userDTO.Username"></InputText>
                <ValidationMessage For="@(() => userDTO.Username)" />
            </div>
            <div class="form-group m-3">
                <label for="password">Password: </label>
                <InputText id="password" @bind-Value="@userDTO.Password"></InputText>
                <ValidationMessage For="@(() => userDTO.Password)" />
            </div>
            <div class="form-group">
                <button type="submit" class="btn btn-primary">Login</button>
            </div>
        </EditForm>

        <div>
            Don't have an account?
            <a href="/Register">Sign up</a>
        </div>
    </div>
</div>

@if (!string.IsNullOrEmpty(ErrorMessage))
{
    <div class="alert alert-danger" role="alert">
        @ErrorMessage
    </div>
}


